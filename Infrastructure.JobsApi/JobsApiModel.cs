using MemoryPack;

namespace Infrastructure.JobsApi;

[MemoryPackable]
public partial record City(string Name, string State, int StateCode);
[MemoryPackable]
public partial record Expertise(int Id, string Name, string Abbreviation, int Sort, IReadOnlyList<int?> ProfessionExpertiseCodes);
[MemoryPackable]
public partial record LocationAlias(int FacilityId, string Location);
[MemoryPackable]
public partial record Profession(int Id, string Name, int TypeId, string Abbreviation, int Sort);
[MemoryPackable]
public partial record State(int Id, string Abbreviation, string Name, bool CompactLicenseAvailable, bool HasQuickLicense);
[MemoryPackable]
public partial record Lookups(
    IReadOnlyList<Expertise> Expertises,
    IReadOnlyList<Profession> Professions,
    IReadOnlyList<State> States,
    IReadOnlyList<LocationAlias> LocationAliases,
    IReadOnlyList<City> Cities
);
[MemoryPackable]
public partial record ProfessionWithType(int Id, string Name, string ProfessionTypeName);
[MemoryPackable]
public partial record JobSearchResult(
    IReadOnlyList<Job> Items,
    EmploymentTypeCount EmploymentTypeCount,
    int? Count,
    int? PositionCountAfterAllFilters,
    int? PositionCountAfterFacilityNameFilter
);
[MemoryPackable]
public partial record EmploymentTypeCount(
    int? Permanent,
    int? TravelOrContract,
    int? PerDiem,
    int? Marketing,
    int? Emr,
    int? LocumTenens1099,
    int? LocumTenensW2,
    int? WorkforceDisruption,
    int? AccessControl,
    int? InterimLeadership,
    int? Government,
    int? Education,
    int? Undefined
);
[MemoryPackable]
public partial record Job(
    int? JobID,
    string FacilityName,
    int? FacilityId,
    int? FacilityTypeId,
    //object FacilityImage,
    string City,
    int? StateCode,
    string StateAbbrev,
    string State,
    int? ExpertiseCode,
    string ExpertiseText,
    int? ProfessionCode,
    string ProfessionText,
    int? EmploymentTypeCode,
    string EmploymentTypeText,
    DateTime? StartDate,
    string ShortShift,
    bool? IsRecommended,
    bool? IsFeatured,
    DateTime? EnteredTime,
    string HospitalAddress,
    string HospitalZip,
    int? HospitalTypeId,
    int? HospitalSystemId,
    double? RegularPayLow,
    double? RegularPayHigh,
    //object WeeklyPayLow,
    //object WeeklyPayHigh,
    int? Rank,
    int? RapidResponse,
    int? Positions,
    //object ApplicationDate,
    double? HospitalLocationLat,
    double? HospitalLocationLong,
    int? JobFulfillmentTypeId,
    //object IsClosed,
    bool? IsOnHold,
    bool? HideFacilityName,
    string LongShift,
    string LongShiftAlt,
    int? Shifts,
    //object ShiftRate,
    int? ShiftsAlt,
    double? Hours,
    string HoursAlt,
    int? ShiftH,
    int? ShiftM,
    int? ShiftToH,
    int? ShiftToM,
    int? ShiftAltH,
    int? ShiftAltM,
    int? ShiftAltToH,
    int? ShiftAltToM,
    int? AltShiftFl,
    bool? HideFromInternal,
    int? Duration,
    string ShiftText,
    string AltShiftText,
    //object AdditionalShiftNote,
    //object Details,
    //object RateHigh,
    //object RateLow,
    double? AlternatePayHigh,
    double? AlternatePayLow,
    //object ShowCustomPayFormat,
    //object CustomPayShift,
    bool? IsAyaGroupTwo,
    bool? IsAyaGroupOne,
    double? Bonus,
    DateTime? Posted,
    int? HospitalRating,
    //object RecommendedDate,
    //object PayPeriodTypeId,
    IReadOnlyList<string> RequiredCertifications,
    IReadOnlyList<string> RequiredSkills,
    IReadOnlyList<string> PreferredCertifications,
    IReadOnlyList<string> PreferredSkills,
    bool? IsAcceptingNewGrads,
    bool? IsJobsYouMightLike,
    bool? IsLowSubmittalRatio,
    string StartDateDisplay,
    //object PayRate,
    string PreviousChargeExperience,
    string PatientRatioExperience,
    string TeachingHospitalExperience,
    string CommunityHospitalExperience,
    string TravelExperienceRequired
);





[MemoryPackable]
// Root myDeserializedClass = JsonConvert.DeserializeObject<Root>(myJsonResponse);
public partial record PayRate(int PayPeriodType, string Value);
[MemoryPackable]
public partial record JobDetail(
int? JobID,
string City,
string StateAbbrev,
DateTime? Posted,
string State,
int? StateCode,
int? ExpertiseCode,
string ExpertiseText,
int? ProfessionCode,
string ProfessionText,
int? EmploymentTypeCode,
string EmploymentTypeText,
string JobDescription,
int? JobFulfillmentTypeId,
DateTime? StartDate,
int? Duration,
string ZipCode,
//object SampleMarginId,
int? UnitId,
string HospitalName,
int? HospitalId,
//object HospitalSystemId,
DateTime? RecommendedDate,
//object NotInterestedDate,
string HospAddress,
//object RapidResponse,
//object PrismaRequisitionId,
bool? IsDeleted,
bool? IsOnHold,
int? Positions,
bool? HideFacilityName,
bool? IsAyaGroupTwo,
bool? IsAyaGroupOne,
//object MinimumExperienceRequired,
string FirstTimeTravelerAccepted,
//object UnitBedCount,
string StaffingRatioDays,
//object StaffingRatioNights,
//object StaffingRatioWeekends,
bool? IsBsnRequired,
//IReadOnlyList<object> RequiredCertifications,
IReadOnlyList<string> RequiredSkills,
//object FloatRequired,
IReadOnlyList<string> PreferredCertifications,
IReadOnlyList<object> PreferredSkills,
bool? HasFacilityTraumaLevelOne,
bool? HasFacilityTraumaLevelTwo,
bool? HasFacilityTraumaLevelThree,
bool? HasFacilityTraumaLevelFour,
//object FacilityAdultTraumaType,
//object FacilityPedsTraumaType,
bool? IsFacilityMagnet,
bool? IsFacilityTeaching,
string ChartingSystem,
int? FacilityBedCount,
//object FacilityLink,
double? FacilityBonus,
int? FacilityTypeId,
int? HospitalTypeId,
double? WeeklyPayLow,
double? WeeklyPayHigh,
double? AltWeeklyPayLow,
double? AltWeeklyPayHigh,
//object PayPeriodTypeId,
string ShiftText,
string AltShiftText,
//object AdditionalShiftNote,
int? HospitalRating,
bool? IsFeatured,
bool? IsNew,
//object ShowCustomPayFormat,
//object CustomPayShift,
string ShortShift,
string LongShift,
string ShortShiftAlt,
string LongShiftAlt,
bool? IsAcceptingNewGrads,
bool? IsLowSubmittalRatio,
string StartDateDisplay,
PayRate PayRate,
string PreviousChargeExperience,
string PatientRatioExperience,
string TeachingHospitalExperience,
string CommunityHospitalExperience,
string TravelExperienceRequired
);

